use std::convert::TryFrom;
use stun::Payload;
use criterion::{
    black_box, 
    criterion_group, 
    criterion_main, 
    Criterion
};

const BUFFER: [u8; 108] = [
    0x00u8, 0x09, 0x00, 0x58, 0x21, 0x12, 0xa4, 0x42, 0x35, 
    0x6a, 0x52, 0x42, 0x33, 0x4c, 0x65, 0x68, 0x2b, 0x7a,
    0x75, 0x52, 0x00, 0x0c, 0x00, 0x04, 0x40, 0x00, 0x00, 
    0x00, 0x00, 0x12, 0x00, 0x08, 0x00, 0x01, 0xe1, 0x10, 
    0x5e, 0x12, 0xa4, 0x43, 0x00, 0x06, 0x00, 0x03, 0x64, 
    0x65, 0x76, 0x00, 0x00, 0x14, 0x00, 0x09, 0x6c, 0x6f,
    0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x00, 0x00,
    0x00, 0x00, 0x15, 0x00, 0x10, 0x6c, 0x37, 0x7a, 0x38,
    0x33, 0x6b, 0x6c, 0x36, 0x61, 0x35, 0x63, 0x73, 0x77,
    0x74, 0x74, 0x34, 0x00, 0x08, 0x00, 0x14, 0xbd, 0xb8,
    0xee, 0x7d, 0xc8, 0x9f, 0x85, 0x1b, 0x5f, 0x18, 0x9a,
    0x7b, 0x84, 0x3a, 0xfd, 0x88, 0xde, 0x03, 0xc0, 0x34
];

fn criterion_benchmark(c: &mut Criterion) {
    c.bench_function("stun_decoder", |b| b.iter(|| {
        Payload::try_from(black_box(&BUFFER[..])).unwrap()
    }));
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
